# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import payment_pb2 as payment__pb2


class PaymentServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPaymentOptions = channel.unary_unary(
                '/com.connectroutes.payment.PaymentService/GetPaymentOptions',
                request_serializer=payment__pb2.GetPaymentOptionsRequest.SerializeToString,
                response_deserializer=payment__pb2.GetPaymentOptionsResponse.FromString,
                )
        self.AddCard = channel.unary_unary(
                '/com.connectroutes.payment.PaymentService/AddCard',
                request_serializer=payment__pb2.AddCardRequest.SerializeToString,
                response_deserializer=payment__pb2.AddCardResponse.FromString,
                )
        self.SubmitCardAuthorization = channel.unary_unary(
                '/com.connectroutes.payment.PaymentService/SubmitCardAuthorization',
                request_serializer=payment__pb2.SubmitCardAuthorizationRequest.SerializeToString,
                response_deserializer=payment__pb2.AddCardResponse.FromString,
                )
        self.AddCardByReference = channel.unary_unary(
                '/com.connectroutes.payment.PaymentService/AddCardByReference',
                request_serializer=payment__pb2.AddCardByReferenceRequest.SerializeToString,
                response_deserializer=payment__pb2.AddCardResponse.FromString,
                )


class PaymentServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetPaymentOptions(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCard(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitCardAuthorization(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCardByReference(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPaymentOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentOptions,
                    request_deserializer=payment__pb2.GetPaymentOptionsRequest.FromString,
                    response_serializer=payment__pb2.GetPaymentOptionsResponse.SerializeToString,
            ),
            'AddCard': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCard,
                    request_deserializer=payment__pb2.AddCardRequest.FromString,
                    response_serializer=payment__pb2.AddCardResponse.SerializeToString,
            ),
            'SubmitCardAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitCardAuthorization,
                    request_deserializer=payment__pb2.SubmitCardAuthorizationRequest.FromString,
                    response_serializer=payment__pb2.AddCardResponse.SerializeToString,
            ),
            'AddCardByReference': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCardByReference,
                    request_deserializer=payment__pb2.AddCardByReferenceRequest.FromString,
                    response_serializer=payment__pb2.AddCardResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.connectroutes.payment.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetPaymentOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.connectroutes.payment.PaymentService/GetPaymentOptions',
            payment__pb2.GetPaymentOptionsRequest.SerializeToString,
            payment__pb2.GetPaymentOptionsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.connectroutes.payment.PaymentService/AddCard',
            payment__pb2.AddCardRequest.SerializeToString,
            payment__pb2.AddCardResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitCardAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.connectroutes.payment.PaymentService/SubmitCardAuthorization',
            payment__pb2.SubmitCardAuthorizationRequest.SerializeToString,
            payment__pb2.AddCardResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCardByReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.connectroutes.payment.PaymentService/AddCardByReference',
            payment__pb2.AddCardByReferenceRequest.SerializeToString,
            payment__pb2.AddCardResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
